# Autostart
# exec udiskie
# exec gammastep

# Start up stuff
# Auth with polkit-gnome:
exec /usr/libexec/polkit-gnome-authentication-agent-1

# Desktop notifications
exec mako

# wlsunset
exec wlsunset -l 25.7 -L 28.2

# Network Applet
exec nm-applet --indicator

# GTK3 applications take a long time to start
# exec systemctl --user import-environment DISPLAY WAYLAND_DISPLAY SWAYSOCK
# exec hash dbus-update-activation-environment 2>/dev/null && \
     # dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK


# Style
font pango:Cantarell 12px 
default_border pixel 2
smart_borders on
gaps outer 1
gaps inner 1

## Window decoration
# class                 border  backgr. text    indicator child_border
client.focused          #c49ec4 #262626 #f0f0f0 #9ec3c4   #c49ec4
client.focused_inactive #c49ec4 #262626 #f0f0f0 #9ec3c4   #c49ec4
client.unfocused        #c49ec4 #0f0f0f #f0f0f0 #9ec3c4   #4c4c4c
client.urgent           #c49ec4 #c49ec4 #0f0f0f #9ec3c4   #c49ec4

# Import GTK settings
# exec_always ~/.config/sway/scripts/import-gsettings

# Assign workspaces
assign [app_id="firefox"] 2
for_window [app_id="firefox"] focus

assign [class="firefox"] 2
for_window [class="firefox"] focus

assign [app_id=thunar] 3
for_window [app_id=thunar] focus

assign [class="Telegram"] 4
for_window [class="Telegram"] focus


for_window [app_id="xed"] focus


# set floating (nontiling)for apps needing it:
for_window [class="Yad" instance="yad"] floating enable
for_window [app_id="yad"] floating enable
for_window [app_id="blueman-manager"] floating enable,  resize set width 40 ppt height 30 ppt

# set floating (nontiling) for special apps:
for_window [class="Xsane" instance="xsane"] floating enable
for_window [app_id="pavucontrol" ] floating enable, resize set width 40 ppt height 30 ppt
for_window [class="qt5ct" instance="qt5ct"] floating enable, resize set width 60 ppt height 50 ppt
for_window [class="Bluetooth-sendto" instance="bluetooth-sendto"] floating enable
for_window [app_id="pamac-manager"] floating enable, resize set width 80 ppt height 70 ppt
for_window [class="Lxappearance"] floating enable, resize set width 60 ppt height 50 ppt

# set floating for window roles
for_window [window_role="pop-up"] floating enable
for_window [window_role="bubble"] floating enable
for_window [window_role="task_dialog"] floating enable
for_window [window_role="Preferences"] floating enable
for_window [window_type="dialog"] floating enable
for_window [window_type="menu"] floating enable
for_window [window_role="About"] floating enable
for_window [title="File Operation Progress"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="firefox" title="^Library$"] floating enable, border pixel 1, sticky enable, resize set width 40 ppt height 30 ppt
for_window [app_id="floating_shell_portrait"] floating enable, border pixel 1, sticky enable, resize set width 30 ppt height 40 ppt
for_window [title="Picture in picture"] floating enable, sticky enable
for_window [title="nmtui"] floating enable,  resize set width 50 ppt height 70 ppt
for_window [title="htop"] floating enable, resize set width 50 ppt height 70 ppt
for_window [app_id="xsensors"] floating enable
for_window [title="Save File"] floating enable
for_window [app_id="firefox" title="Firefox â€” Sharing Indicator"] kill

# Inhibit idle
for_window [app_id="firefox"] inhibit_idle fullscreen
for_window [app_id="Chromium"] inhibit_idle fullscreen


# Keybindings

## Touchpad settings
input type:touchpad {
       dwt enabled
       tap enabled
       natural_scroll enabled
       middle_emulation enabled
   }

input "type:keyboard" {
    xkb_options caps:ctrl_modifier
  }
## Logo key
set $mod Mod4

## Home row direction keys
set $left h
set $down j
set $up k
set $right l

# Defaults

## terminal emulator
# set $term "flatpak run org.wezfurlong.wezterm"
# set $term foot
# set $term kitty
set $term alacritty

## Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -c ~/.config/wofi/config -I

## Output configuration
# Default wallpaper 
# output * bg /home/loki/pictures/wallpapers/mountain-rocks-at-sea.jpg fill
# can replace $Home with your user specific home directory
output * bg /home/plamedi/Pictures/i-see-you.jpg fill


# Behavior
focus_follows_mouse yes

### Idle configuration
#
# Example configuration:
#

### Idle configuration
exec swayidle -w\
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    timeout 770 'swaymsg "output * power off"' \
    resume 'swaymsg "output * power on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'


# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

# Key bindings
#
# Basics:
#
# Start a terminal
bindsym $mod+Return exec $term

# Kill focused window
bindsym $mod+Shift+q kill

# Start your launcher
bindsym $mod+d exec $menu

# Dismiss notifications
bindsym Control+space exec makoctl dismiss

# Screenshot with grim and swappy
bindsym print exec grim - | swappy -f -
bindsym Shift+print exec grim -g "$(slurp)" - | swappy -f -
    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

# Reload the configuration file
bindsym $mod+Shift+c reload
bindsym $mod+e exec nautilus
bindsym $mod+n exec thunar
bindsym $mod+o exec firefox

# Exit sway (logs you out of your Wayland session)
bindsym $mod+Shift+e exec swaynag -t warning -m 'Do you wish to fully reload your Sway session?' -b 'Yes' 'swaymsg exit'
# Turn the system off
bindsym $mod+Shift+p exec swaynag -t warning -m 'What action would you like to perform?' -b 'Shutdown' 'poweroff' -b 'Restart' 'poweroff --reboot'
#
# Moving around:
#
# Move your focus around
bindsym $mod+$left focus left
bindsym $mod+$down focus down
bindsym $mod+$up focus up
bindsym $mod+$right focus right

# Move the focused window with the same, but add Shift
bindsym $mod+Shift+$left move left
bindsym $mod+Shift+$down move down
bindsym $mod+Shift+$up move up
bindsym $mod+Shift+$right move right
#
# Workspaces:
# swapped for corne convenience
# Switch to workspace
bindsym $mod+1 workspace number 1
bindsym $mod+2 workspace number 2
bindsym $mod+3 workspace number 3
bindsym $mod+4 workspace number 4
bindsym $mod+5 workspace number 5

bindsym $mod+6 workspace number 6
bindsym $mod+7 workspace number 7
bindsym $mod+8 workspace number 8
bindsym $mod+9 workspace number 9
bindsym $mod+0 workspace number 10
# Move focused container to workspace
bindsym $mod+Shift+1 move container to workspace number 1
bindsym $mod+Shift+2 move container to workspace number 2
bindsym $mod+Shift+3 move container to workspace number 3
bindsym $mod+Shift+4 move container to workspace number 4
bindsym $mod+Shift+5 move container to workspace number 5

bindsym $mod+Shift+6 move container to workspace number 6
bindsym $mod+Shift+7 move container to workspace number 7
bindsym $mod+Shift+8 move container to workspace number 8
bindsym $mod+Shift+9 move container to workspace number 9
bindsym $mod+Shift+0 move container to workspace number 10
# Note: workspaces can have any name you want, not just numbers.
# We just use 1-10 as the default.
bindsym $mod+Tab workspace back_and_forth
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+m layout tabbed
    bindsym $mod+t layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle floating 
    bindsym $mod+s floating toggle
    # Toggle between floating and other layout
    bindsym $mod+Shift+s focus mode_toggle
    # Move floating windows around
    bindsym $mod+Up move up 1
    bindsym $mod+Shift+Up move up 10
    bindsym $mod+Left move left 1
    bindsym $mod+Shift+Left move left 10
    bindsym $mod+Right move right 1
    bindsym $mod+Shift+Right move right 10
    bindsym $mod+Down move down 1
    bindsym $mod+Shift+Down move down 10

    # Move focus to the parent container
    bindsym $mod+a focus parent

    # Move focus to the child container
    bindsym $mod+Shift+a focus child
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show

# Resizing containers:
bindsym $mod+alt+$left resize shrink width 20px
bindsym $mod+alt+$up resize grow height 20px
bindsym $mod+alt+$down resize shrink height 20px
bindsym $mod+alt+$right resize grow width 20px

# audio control
set $sink_volume pactl get-sink-volume @DEFAULT_SINK@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $source_volume pactl get-source-volume @DEFAULT_SOURCE@ | grep '^Volume:' | cut -d / -f 2 | tr -d ' ' | sed 's/%//'
set $volume_down $(pactl set-sink-volume @DEFAULT_SINK@ -5% && $sink_volume)
set $volume_up $(pactl set-sink-volume @DEFAULT_SINK@ +5% && $sink_volume)
set $volume_mute $(pactl set-sink-mute @DEFAULT_SINK@ toggle && pactl get-sink-mute @DEFAULT_SINK@ | sed -En "/no/ s/.*/$($sink_volume)/p; /yes/ s/.*/0/p")
set $mic_mute $(pactl set-source-mute @DEFAULT_SOURCE@ toggle && pactl get-source-mute @DEFAULT_SOURCE@ | sed -En "/no/ s/.*/$($source_volume)/p; /yes/ s/.*/0/p")

## Special keys
#
# Volume
#
    # Control volume trough pamixer
    # bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2
    # bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2
    # bindsym --locked XF86AudioMute exec pamixer -t
    
    # Control volume directly trough pactl
    bindsym --locked XF86AudioRaiseVolume exec $volume_up
    bindsym --locked XF86AudioLowerVolume exec $volume_down
    bindsym --locked XF86AudioMute exec $volume_mute
#
# Player
#
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
#
# Backlight
#
    bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-
    
# bindsym --locked $mod+d exec sh -c "notify-send 'Do Not Disturb' 'Turning on Do Not Disturb Mode'; sleep 2; makoctl set-mode do-not-disturb"
# bindsym --locked $mod+Shift+d exec sh -c "makoctl set-mode default ; notify-send 'Do Not Disturb' 'Do Not Disturb Mode disabled'"

# Status Bar:
# Read `man 5 sway-bar` for more information about this section.
bar {
    swaybar_command waybar
    # swaybar_command swaybar
    # status_command i3status
    # colors {
    #     background #000000
    #   }
    # }
}

# exec ~/.config/polybar/launch.sh --cuts

include /etc/sway/config.d/*
